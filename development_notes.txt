Next Steps:
	- GED, MCS detection
	- MCS matching (top k), pruning technique
	- hardcode metrics (e.g. MCS + GED + MCS matching)
	- unsupervised graph embeddings (e.g. tsne) visualization
	- change query format for user friendly (e.g. fill in the blank, remove first 3 lines which are unfriendly)
	- consider perfect case - what to include
	- neo4j - leverage existing work
	- upload a graph: adj mat
	- add node by clicking (draw)
	- separate tau (metadata and graph) from query
	- show 10 graphs, and then next 10
	- isomorphic graph should look same? tsne?
	- id visualization ged (3 column table) + pagination
	- upload dataset/graph - retrain (challenging)? retrain after significantly change? periodically retrain in background
	- offline version?
	- display linux/alchemy/aids for selection...
	- toy database
	- progress bar for retrain...

Links for splitted train/test:
	https://drive.google.com/file/d/1xgWbDhynOV4fM7cerVn3GtaGTUkPntsI/view?usp=sharing
	https://drive.google.com/file/d/1s0L8HZdZCmMrdxT5taPp3qOhGC4EH8ru/view?usp=sharing
	https://drive.google.com/file/d/130iGpQiAnJ0_m4IyHD6H7fM-RurVZy9s/view?usp=sharing

example command to start server:
	bin/main ../data/FULL_ALCHEMY/train/graphs.bss 119387 ../model/SavedModel/0618_NoAugFULL_ALCHEMY.ckpt ../model/SavedModel/inverted_index_0618_NoAugFULL_ALCHEMY.txt ../model/SavedModel/bit_weights_0618_NoAugFULL_ALCHEMY.txt

To fix "AttributeError: module 'sys' has no attribute 'argv'", copy the following three lines to /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/platform/flags.py
	import sys
	if not hasattr(sys, 'argv'):
    	sys.argv  = ['']

那直接把training dataset里的图转化成查询，就可以保证一定非空
training dataset里的文件格式是：
图ID
节点数n 边数m
接下来n行表示节点标签
最后m行表示边

clone https://github.com/erdnase1902/Graph-Hashing
checkout server branch

clone sigma.js github into flask_server/static:
	git clone git@github.com:jacomyal/sigma.js.git
To build the code:
    Install Node.js.
    Install npm
    Use "npm install" to install sigma development dependencies.
    Use "npm run build" to minify the code with Uglify. The minified file sigma.min.js will then be accessible in the build/ folder.

jquery PyCharm:
	https://intellij-support.jetbrains.com/hc/en-us/community/posts/360002260719--jQuery-shortcut-underlined-as-unresolved-function-or-method-

https://stackoverflow.com/questions/26954122/how-can-i-pass-arguments-into-redirecturl-for-of-flask
https://stackoverflow.com/questions/8925716/disabled-form-fields-not-submitting-data
https://stackoverflow.com/questions/60183002/how-to-do-pagination-for-bootstrap-grid
https://stackoverflow.com/questions/9486393/jinja2-change-the-value-of-a-variable-inside-a-loop

FULL_ALCHEMY dataset里，这个图是有距离为1的结果的
1280528
10 10
0
1
0
0
1
0
0
0
0
0
0 8 1
0 3 1
1 3 1
1 6 1
2 5 1
2 9 1
3 9 1
4 7 1
6 7 1
7 8 1
转化成查询就是
1 10 1280528; 10; 10; 0; 1; 0; 0; 1; 0; 0; 0; 0; 0; 0 8 1; 0 3 1; 1 3 1; 1 6 1; 2 5 1; 2 9 1; 3 9 1; 4 7 1; 6 7 1; 7 8 1;

嗯，有可能是出现了false negative的情况，我当初选这个是用的ground truth选的，可能模型会miss正确答案。可以试着把query的阈值调高点，比如把第一个1改成5，6，或者直到出现结果的数字
或者直接拿训练集的图作为query，应该一定会有结果。比如 1 10 1222660; 10; 11; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0 6 1; 1 6 1; 1 3 1; 1 7 1; 2 8 1; 2 9 1; 3 4 1; 4 5 1; 5 6 1; 6 8 1; 7 9 1;